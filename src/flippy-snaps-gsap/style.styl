*
*:after
*:before
  box-sizing border-box

:root
  --allow-motion 1

body
  min-height 100vh
  display grid
  place-items center
  background hsl(0, 0%, 95%)

  &:after
    content "Tap"
    font-weight bold
    font-family sans-serif
    position fixed
    bottom 1rem
    right 2rem
    font-size 2rem
    color hsl(0, 0%, 75%)

.loader
  font-family sans-serif
  color hsl(0, 0%, 75%)

.flippy-snap
  height 50vmin
  width 50vmin
  display grid
  // grid-gap 2px
  grid-template-columns repeat(var(--grid-size, 10), 1fr)
  grid-template-rows repeat(var(--grid-size, 10), 1fr)
  transform-style preserve-3d
  perspective 500px

  &:after
    content ''
    height 5%
    width 100%
    position absolute
    background hsl(0, 0%, 70%)
    filter blur(14px)
    top 110%
    left 0
    right 0
    transform rotateX(90deg) translate(0, -50%)

  *
    transform-style preserve-3d

  &__loader
    height 30px
    width 30px
    border-radius 50%
    border 4px solid white
    border-left-color black
    border-right-color black
    position absolute
    bottom 2rem
    right 2rem
    z-index 2
    transform translate3d(0, 0, 1vmin)
    animation spin 1s infinite linear

    @keyframes spin
      to
        transform translate3d(0, 0, 1vmin) rotate(360deg)

  &__card
    --count 0
    transform-origin 50% 50%
    height 100%
    width 100%
    transform rotateX(calc(var(--count, 0) * -180deg))
    position relative

    &--front
    &--rear
      position absolute
      height 100%
      width 100%
      backface-visibility hidden
      -webkit-backface-visibility hidden
      background-image var(--current-image)
      background-position calc(var(--snap-x, 0) * 1%) calc(var(--snap-y, 0) * 1%)
      background-size calc(var(--grid-size) * 100%)

    &--rear
      background-image var(--next-image)
      transform rotateY(180deg) rotate(180deg)

  &__card-wrapper
    position relative
    transform translate3d(0, 0, calc(var(--hovered, 0) * 1vmin))
    transition transform 0.1s


.parallax
  --x calc(((var(--rx, 0) * var(--range-y, 0)) * var(--allow-motion, 1)) * 1deg)
  --y calc(((var(--ry, 0) * var(--range-x, 0)) * var(--allow-motion, 1)) * 1deg)
  --ro calc(((var(--r, 0) * var(--range-x, 0)) * var(--allow-motion, 1)) * 1deg)
  transform rotateX(var(--x)) rotateY(var(--y)) rotate(var(--ro))
  transform-style preserve-3d
  transition transform 0.25s

.parallax__wrapper
  perspective 60vmin
  transform translate3d(0, 0, 100vmin)
  transform-style preserve-3d