@import url('https://fonts.googleapis.com/css2?family=Audiowide&display=swap')

*
*:after
*:before
  box-sizing border-box

body
  min-height 100vh
  display grid
  place-items center
  background hsl(0, 0%, 2%)
  touch-action none
  font-family 'Audiowide', cursive

:root
  --size 28
  --head-size 3.2
  --rotate-x -26
  --rotate-y 45
  --allow-parallax 0.25

.wrapper
  perspective 10000vmin
  transform translate3d(0, 0, 100vmin) rotateX(calc((clamp(-1, var(--parallax-y, 0), 1) * var(--allow-parallax)) * -90deg)) rotateY(calc((clamp(-1, var(--parallax-x, 0), 1) * var(--allow-parallax)) * 90deg)) rotateY(calc(var(--spin, 0) * 1deg))

.instructions
  color white
  position absolute
  top 50%
  left 50%
  transform translate(-50%, -50%)

  a
    color hsl(280, 100%, 80%)

.sr-only
input[type='file']
  position absolute
  width 1px
  height 1px
  padding 0
  margin -1px
  overflow hidden
  clip rect(0, 0, 0, 0)
  white-space nowrap
  border-width 0

.screenshot
  height calc((var(--height, 1) * var(--size)) * 1.65vmin)
  width calc(var(--size) * 1.65vmin)
  display grid
  place-items center
  transform-style preserve-3d

  *
  *:before
  *:after
    transform-style preserve-3d

.scene
  transform rotateX(calc(var(--rotate-x) * 1deg)) rotateY(calc(var(--rotate-y) * 1deg)) rotateX(90deg)

.block-head
  height calc(var(--size) * 1vmin)
  position relative
  width calc(var(--size) * 1vmin)
  display none

  &__img
    position absolute
    height calc(var(--size) * 1vmin)
    width calc(var(--size) * 1vmin)
    top 50%
    left 50%
    transform translate(-50%, -50%) scale(var(--head-size)) translate(calc(var(--translate-x, 0) * 1%), calc(var(--translate-y, 0) * 1%))

    &:not([src])
      display none

  &__side
    height 100%
    position absolute
    width 100%
    top 50%
    left 50%
    background-repeat no-repeat
    overflow hidden
    background var(--gradient-two, blue)

    &:after
      content ''
      z-index -1
      position absolute
      top 50%
      left 50%
      background radial-gradient(circle at calc(var(--gradient-x, 50) * 1%) calc(var(--gradient-y, 50) * 1%),var(--gradient-one, green), var(--gradient-two, blue) calc(var(--gradient-stop, 100) * 1%))
      height 100%
      width 100%
      transform translate(-50%, -50%) scale(calc(5 * var(--head-size))) translate(calc(var(--translate-x, 0) * 1%), calc(var(--translate-y, 0) * 1%))

    &:nth-of-type(1)
      transform translate(-50%, -50%) translate3d(0, 0, calc((var(--size) * var(--height, 1)) * 0.5vmin)) rotate(90deg)
      filter brightness(1.2)
      img
      &:after
        // if height is 0.5 height * 50%
        top calc((100 + (var(--height, 1) * 50)) * 1%)

    &:nth-of-type(2)
      transform translate(-50%, -50%) translate3d(0, 0, calc((var(--size) * var(--height, 1)) * -0.5vmin)) rotate(90deg)
      filter brightness(0.5)
      &:after
      img
        top calc((100 + (var(--height, 1) * 50)) * 1%)
        transform translate(-50%, -50%) scale(var(--head-size)) rotateY(180deg) rotate(180deg) translate(calc(var(--translate-x, 0) * 1%), calc(var(--translate-y, 0) * 1%))

    &:nth-of-type(3)
      transform translate(-50%, -50%) rotateX(90deg) translate3d(0, 0, calc(var(--size) * -0.5vmin)) rotateX(180deg)
      filter brightness(0.62)
      height calc(var(--height, 1) * 100%)
      &:after
      img
        left -50%

    &:nth-of-type(4)
      transform translate(-50%, -50%) rotateX(-90deg) translate3d(0, 0, calc(var(--size) * -0.5vmin)) rotateY(180deg)
      filter brightness(1.2)
      height calc(var(--height, 1) * 100%)
      &:after
      img
        left calc((100 + (var(--height, 1) * 50)) * 1%)

    &:nth-of-type(5)
      display block
      height calc(var(--height, 1) * 100%)
      transform translate(-50%, -50%) rotate(90deg) rotateX(-90deg) translate3d(0, 0, calc(var(--size) * -0.5vmin)) rotateY(180deg)

    &:nth-of-type(6)
      height calc(var(--height, 1) * 100%)
      transform translate(-50%, -50%) rotate(-90deg) rotateX(-90deg) translate3d(0, 0, calc(var(--size) * -0.5vmin)) rotateY(180deg)
